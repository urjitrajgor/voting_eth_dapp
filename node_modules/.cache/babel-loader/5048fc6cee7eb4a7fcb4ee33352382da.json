{"ast":null,"code":"var _jsxFileName = \"/home/urjit/Documents/Blockchain/Dapp/voating_eth_dapp/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Web3 from 'web3';\nimport Voting from './abi/Voting.json';\nimport Admin from './Components/Admin.js';\nimport Vote from './Components/Vote.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await this.loadWeb3();\n      await this.loadBlockChainData();\n    };\n\n    this.loadWeb3 = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n      } else if (window.web3) {\n        window.web3 = new Web3(window.web3);\n      } else {\n        window.alert(\"Please install Metamask\");\n      }\n    };\n\n    this.loadBlockChainData = async () => {\n      const web3 = window.web3;\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        account: accounts[0]\n      });\n      const networkId = await web3.eth.net.getId();\n      const networkData = Voting.networks[networkId];\n      console.log(networkData);\n\n      if (networkData) {\n        const votingContract = new web3.eth.Contract(Voting.abi, networkData.address);\n        console.log(votingContract);\n        this.setState({\n          votingContract\n        });\n      } else {\n        alert(\"No network detected\");\n      }\n    };\n\n    this.state = {\n      account: 0x0,\n      candidateName: '',\n      candidateParty: ''\n    };\n    this.addCandidate = this.addCandidate.bind(this);\n    this.setDates = this.setDates.bind(this);\n  }\n\n  async addCandidate(name, party) {\n    await this.state.votingContract.methods.addCandidate(name, party).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      console.log(receipt);\n    });\n  }\n\n  async setDates(votingStart, votingEnd) {\n    console.log(votingStart);\n    console.log(votingEnd);\n    console.log(Date.now());\n    await this.state.votingContract.methods.setDates(votingStart, votingEnd).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      console.log(receipt);\n    });\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Admin\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/vote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Vote\"))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/admin\",\n      exact: true,\n      render: props => React.createElement(Admin, Object.assign({}, props, {\n        addCandidate: this.addCandidate,\n        setDates: this.setDates,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/vote\",\n      exact: true,\n      render: props => React.createElement(Vote, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/urjit/Documents/Blockchain/Dapp/voating_eth_dapp/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","Link","Web3","Voting","Admin","Vote","App","constructor","props","componentDidMount","loadWeb3","loadBlockChainData","window","ethereum","web3","enable","alert","accounts","eth","getAccounts","setState","account","networkId","net","getId","networkData","networks","console","log","votingContract","Contract","abi","address","state","candidateName","candidateParty","addCandidate","bind","setDates","name","party","methods","send","from","once","receipt","votingStart","votingEnd","Date","now","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,IAAtC,QAAiD,kBAAjD;AACA,OAAO,sDAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA2B;AAEzBU,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAWlBC,iBAXkB,GAWE,YAAY;AAC9B,YAAM,KAAKC,QAAL,EAAN;AACA,YAAM,KAAKC,kBAAL,EAAN;AACD,KAdiB;;AAAA,SAgBlBD,QAhBkB,GAgBP,YAAY;AACnB,UAAGE,MAAM,CAACC,QAAV,EACA;AACED,QAAAA,MAAM,CAACE,IAAP,GAAc,IAAIZ,IAAJ,CAASU,MAAM,CAACC,QAAhB,CAAd;AACA,cAAMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAN;AACD,OAJD,MAIM,IAAGH,MAAM,CAACE,IAAV,EAAe;AACnBF,QAAAA,MAAM,CAACE,IAAP,GAAc,IAAIZ,IAAJ,CAASU,MAAM,CAACE,IAAhB,CAAd;AACD,OAFK,MAED;AACHF,QAAAA,MAAM,CAACI,KAAP,CAAa,yBAAb;AACD;AACJ,KA1BiB;;AAAA,SA4BlBL,kBA5BkB,GA4BG,YAAY;AAC7B,YAAMG,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,YAAMG,QAAQ,GAAG,MAAMH,IAAI,CAACI,GAAL,CAASC,WAAT,EAAvB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEJ,QAAQ,CAAC,CAAD;AAAlB,OAAd;AACA,YAAMK,SAAS,GAAG,MAAMR,IAAI,CAACI,GAAL,CAASK,GAAT,CAAaC,KAAb,EAAxB;AACA,YAAMC,WAAW,GAAGtB,MAAM,CAACuB,QAAP,CAAgBJ,SAAhB,CAApB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;;AACA,UAAGA,WAAH,EACA;AACE,cAAMI,cAAc,GAAG,IAAIf,IAAI,CAACI,GAAL,CAASY,QAAb,CAAsB3B,MAAM,CAAC4B,GAA7B,EAAkCN,WAAW,CAACO,OAA9C,CAAvB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ;AACA,aAAKT,QAAL,CAAc;AAACS,UAAAA;AAAD,SAAd;AACD,OALD,MAKK;AACHb,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACD;AAEJ,KA5CiB;;AAEhB,SAAKiB,KAAL,GAAa;AACXZ,MAAAA,OAAO,EAAE,GADE;AAEXa,MAAAA,aAAa,EAAE,EAFJ;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAqCA,QAAMD,YAAN,CAAmBG,IAAnB,EAAyBC,KAAzB,EAA+B;AAC5B,UAAM,KAAKP,KAAL,CAAWJ,cAAX,CAA0BY,OAA1B,CAAkCL,YAAlC,CAA+CG,IAA/C,EAAqDC,KAArD,EAA4DE,IAA5D,CAAiE;AAACC,MAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWZ;AAAlB,KAAjE,EACLuB,IADK,CACA,SADA,EACYC,OAAD,IAAa;AAC5BlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,OAAZ;AACD,KAHK,CAAN;AAIH;;AAEA,QAAMP,QAAN,CAAeQ,WAAf,EAA4BC,SAA5B,EAAsC;AACpCpB,IAAAA,OAAO,CAACC,GAAR,CAAYkB,WAAZ;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,SAAZ;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAYoB,IAAI,CAACC,GAAL,EAAZ;AACC,UAAM,KAAKhB,KAAL,CAAWJ,cAAX,CAA0BY,OAA1B,CAAkCH,QAAlC,CAA2CQ,WAA3C,EAAwDC,SAAxD,EAAmEL,IAAnE,CAAwE;AAACC,MAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWZ;AAAlB,KAAxE,EACNuB,IADM,CACD,SADC,EACWC,OAAD,IAAa;AAC7BlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,OAAZ;AACD,KAHO,CAAN;AAIL;;AAECK,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAJJ,CADJ,EASI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,MAA1B;AACA,MAAA,MAAM,EAAI1C,KAAD,IAAW,oBAAC,KAAD,oBAAWA,KAAX;AAAkB,QAAA,YAAY,EAAI,KAAK4B,YAAvC;AAAqD,QAAA,QAAQ,EAAI,KAAKE,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,MAAzB;AAA0B,MAAA,MAAM,EAAG9B,KAAD,IAAU,oBAAC,IAAD,oBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CATJ,CADJ,CADF;AAmBD;;AArFwB;;AAuF3B,eAAeF,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Web3 from 'web3';\nimport Voting from './abi/Voting.json'\nimport Admin from './Components/Admin.js';\nimport Vote from './Components/Vote.js';\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      account: 0x0,\n      candidateName: '',\n      candidateParty: ''\n    }\n    this.addCandidate = this.addCandidate.bind(this)\n    this.setDates = this.setDates.bind(this)\n  }\n\n  componentDidMount = async () => {\n    await this.loadWeb3()\n    await this.loadBlockChainData()\n  }\n\n  loadWeb3 = async () => {\n      if(window.ethereum)\n      {\n        window.web3 = new Web3(window.ethereum)\n        await window.ethereum.enable()\n      }else if(window.web3){\n        window.web3 = new Web3(window.web3)\n      }else{\n        window.alert(\"Please install Metamask\");\n      }\n  }\n\n  loadBlockChainData = async () => {\n      const web3 = window.web3;\n      const accounts = await web3.eth.getAccounts()\n      this.setState({account: accounts[0]})\n      const networkId = await web3.eth.net.getId()\n      const networkData = Voting.networks[networkId]\n      console.log(networkData)\n      if(networkData)\n      {\n        const votingContract = new web3.eth.Contract(Voting.abi, networkData.address)\n        console.log(votingContract)\n        this.setState({votingContract})\n      }else{\n        alert(\"No network detected\")\n      }\n\n  }\n\n   async addCandidate(name, party){\n      await this.state.votingContract.methods.addCandidate(name, party).send({from: this.state.account})\n      .once('receipt', (receipt) => {\n        console.log(receipt)\n      })\n  }\n\n   async setDates(votingStart, votingEnd){\n     console.log(votingStart)\n     console.log(votingEnd)\n     console.log(Date.now())  \n      await this.state.votingContract.methods.setDates(votingStart, votingEnd).send({from: this.state.account})\n     .once('receipt', (receipt) => {\n      console.log(receipt)\n    })\n}\n\n  render() {\n    return (\n      <BrowserRouter>\n          <div>\n              <ul>\n                  <li>\n                      <Link to=\"/admin\">Admin</Link>\n                  </li>\n                  <li>\n                      <Link to=\"/vote\">Vote</Link>\n                  </li>\n              </ul>\n              <Switch>                 \n                  <Route path=\"/admin\" exact \n                  render= {(props) => <Admin {...props} addCandidate = {this.addCandidate} setDates = {this.setDates} /> }/>\n                  <Route path=\"/vote\" exact render={(props)=> <Vote {...props}  />} />\n              </Switch>\n          </div>        \n      </BrowserRouter>\n    )            \n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}