{"ast":null,"code":"var _jsxFileName = \"/home/urjit/Documents/Blockchain/Dapp/voating_eth_dapp/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Web3 from 'web3';\nimport Voting from './abi/Voting.json';\nimport Admin from './Components/Admin.js';\nimport Vote from './Components/Vote.js';\nimport { async } from 'q';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      await this.loadWeb3();\n      await this.loadBlockChainData();\n    };\n\n    this.loadWeb3 = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n      } else if (window.web3) {\n        window.web3 = new Web3(window.web3);\n      } else {\n        window.alert(\"Please install Metamask\");\n      }\n    };\n\n    this.loadBlockChainData = async () => {\n      const web3 = window.web3;\n      const accounts = web3.eth.getAccounts();\n      this.setState({\n        account: accounts[0]\n      });\n      const networkId = web3.eth.net.getId();\n      const networkData = Voting.networks[networkId];\n      console.log(networkData);\n\n      if (networkData) {\n        const votingContract = web3.eth.Contract(Voting.abi, networkData.address);\n        this.setState({\n          votingContract\n        });\n      } else {\n        alert(\"No network detected\");\n      }\n    };\n\n    this.state = {\n      account: 0x0\n    };\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Admin\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/vote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Vote\"))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/admin\",\n      exact: true,\n      component: Admin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/vote\",\n      exact: true,\n      render: props => React.createElement(Vote, Object.assign({}, props, {\n        web3: this.state.web3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/urjit/Documents/Blockchain/Dapp/voating_eth_dapp/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","Link","Web3","Voting","Admin","Vote","async","App","constructor","props","componentDidMount","loadWeb3","loadBlockChainData","window","ethereum","web3","enable","alert","accounts","eth","getAccounts","setState","account","networkId","net","getId","networkData","networks","console","log","votingContract","Contract","abi","address","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,IAAtC,QAAiD,kBAAjD;AACA,OAAO,sDAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,KAAT,QAAsB,GAAtB;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA2B;AAEzBW,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAOlBC,iBAPkB,GAOE,YAAY;AAC9B,YAAM,KAAKC,QAAL,EAAN;AACA,YAAM,KAAKC,kBAAL,EAAN;AACD,KAViB;;AAAA,SAYlBD,QAZkB,GAYP,YAAY;AACnB,UAAGE,MAAM,CAACC,QAAV,EACA;AACED,QAAAA,MAAM,CAACE,IAAP,GAAc,IAAIb,IAAJ,CAASW,MAAM,CAACC,QAAhB,CAAd;AACA,cAAMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAAN;AACD,OAJD,MAIM,IAAGH,MAAM,CAACE,IAAV,EAAe;AACnBF,QAAAA,MAAM,CAACE,IAAP,GAAc,IAAIb,IAAJ,CAASW,MAAM,CAACE,IAAhB,CAAd;AACD,OAFK,MAED;AACHF,QAAAA,MAAM,CAACI,KAAP,CAAa,yBAAb;AACD;AACJ,KAtBiB;;AAAA,SAwBlBL,kBAxBkB,GAwBG,YAAY;AAC7B,YAAMG,IAAI,GAAGF,MAAM,CAACE,IAApB;AACA,YAAMG,QAAQ,GAAGH,IAAI,CAACI,GAAL,CAASC,WAAT,EAAjB;AACA,WAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAEJ,QAAQ,CAAC,CAAD;AAAlB,OAAd;AACA,YAAMK,SAAS,GAAGR,IAAI,CAACI,GAAL,CAASK,GAAT,CAAaC,KAAb,EAAlB;AAEA,YAAMC,WAAW,GAAGvB,MAAM,CAACwB,QAAP,CAAgBJ,SAAhB,CAApB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;;AACA,UAAGA,WAAH,EACA;AACE,cAAMI,cAAc,GAAGf,IAAI,CAACI,GAAL,CAASY,QAAT,CAAkB5B,MAAM,CAAC6B,GAAzB,EAA8BN,WAAW,CAACO,OAA1C,CAAvB;AACA,aAAKZ,QAAL,CAAc;AAACS,UAAAA;AAAD,SAAd;AACD,OAJD,MAIK;AACHb,QAAAA,KAAK,CAAC,qBAAD,CAAL;AACD;AAEJ,KAxCiB;;AAEhB,SAAKiB,KAAL,GAAa;AACXZ,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAqCDa,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAJJ,CADJ,EASI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,SAAS,EAAE/B,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,MAAzB;AAA0B,MAAA,MAAM,EAAGK,KAAD,IAAU,oBAAC,IAAD,oBAAUA,KAAV;AAAiB,QAAA,IAAI,EAAE,KAAKyB,KAAL,CAAWnB,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CATJ,CADJ,CADF;AAkBD;;AA/DwB;;AAiE3B,eAAeR,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Web3 from 'web3';\nimport Voting from './abi/Voting.json'\nimport Admin from './Components/Admin.js';\nimport Vote from './Components/Vote.js';\nimport { async } from 'q';\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      account: 0x0\n    }\n  }\n\n  componentDidMount = async () => {\n    await this.loadWeb3()\n    await this.loadBlockChainData()\n  }\n\n  loadWeb3 = async () => {\n      if(window.ethereum)\n      {\n        window.web3 = new Web3(window.ethereum)\n        await window.ethereum.enable()\n      }else if(window.web3){\n        window.web3 = new Web3(window.web3)\n      }else{\n        window.alert(\"Please install Metamask\");\n      }\n  }\n\n  loadBlockChainData = async () => {\n      const web3 = window.web3;\n      const accounts = web3.eth.getAccounts()\n      this.setState({account: accounts[0]})\n      const networkId = web3.eth.net.getId()\n\n      const networkData = Voting.networks[networkId]\n      console.log(networkData)\n      if(networkData)\n      {\n        const votingContract = web3.eth.Contract(Voting.abi, networkData.address)\n        this.setState({votingContract})\n      }else{\n        alert(\"No network detected\")\n      }\n\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n          <div>\n              <ul>\n                  <li>\n                      <Link to=\"/admin\">Admin</Link>\n                  </li>\n                  <li>\n                      <Link to=\"/vote\">Vote</Link>\n                  </li>\n              </ul>\n              <Switch>                 \n                  <Route path=\"/admin\" exact component={Admin} />\n                  <Route path=\"/vote\" exact render={(props)=> <Vote {...props} web3={this.state.web3} />} />\n              </Switch>\n          </div>        \n      </BrowserRouter>\n    )            \n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}